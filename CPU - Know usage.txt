DECLARE @ts_now bigint = (SELECT cpu_ticks/(cpu_ticks/ms_ticks) FROM sys.dm_os_sys_info WITH (NOLOCK));
SELECT --TOP(256) --edit top # to pull more or less records
EventTime = DATEADD(ms, -1 * (@ts_now - [timestamp]), GETDATE()) --edit the -1 metric to pull data in larger intervals, example -50 is 50 minutues, -1 is 1 minute intervals
,Total_Server_CPU = case when (100 - SystemIdle - SQLProcessUtilization) < 1 then SQLProcessUtilization -- Customized to calculate Total CPU and fix negative “Other Processes Scenario”
else SQLProcessUtilization + (100 - SystemIdle - SQLProcessUtilization)
end
,SQL_Instance_CPU = SQLProcessUtilization
,Other_Process_CPU = 100 - SystemIdle - SQLProcessUtilization
,System_Idle_Process = SystemIdle
FROM (
SELECT record.value('(./Record/@id)[1]', 'int') AS record_id,
record.value('(./Record/SchedulerMonitorEvent/SystemHealth/SystemIdle)[1]', 'int')
AS [SystemIdle],
record.value('(./Record/SchedulerMonitorEvent/SystemHealth/ProcessUtilization)[1]',
'int')
AS [SQLProcessUtilization], [timestamp]
FROM (
SELECT [timestamp], CONVERT(xml, record) AS [record]
FROM sys.dm_os_ring_buffers WITH (NOLOCK)
WHERE ring_buffer_type = N'RING_BUFFER_SCHEDULER_MONITOR'
AND record LIKE N'%<SystemHealth>%') AS x
) AS y
ORDER BY record_id DESC OPTION (RECOMPILE);